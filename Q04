--04. Crie uma coluna para saber o preço unitário do item de venda, crie um script para atualizar os dados já existentes e
-- logo em seguida uma trigger para preencher o campo.
alter table sale_item
add column unit_price numeric(16,2);

update sale_item as s
set unit_price = (
    select sale_price
    from product p
    where  p.id = s.id_product
    )
where active=true;

create or replace function fn_salve_sale_item() returns trigger as
    $$
    begin
        raise notice 'new.id, new.id_product, %, %', new.id, new.id_product;
            Update sale_item as s
            set unit_price = (select sale_price from product p where p.id = new.id_product) where s.id=new.id;
            return new;
    end;
    $$
language plpgsql;

create trigger tg_fn_add_unit_price
    after insert on sale_item
    for each row
    execute function fn_salve_sale_item();

insert into sale_item(id_sale,id_product, quantity, created_at, modified_at, active) values(1,1, 3, now(), now(), true);
